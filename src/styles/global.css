@tailwind base;
@tailwind components;
@tailwind utilities;

@font-face {
  font-family: 'Johnston100';
  src: url('/fonts/johnston100-w03-light.eot');
  src:
    url('/fonts/johnston100-w03-light.eot?#iefix') format('embedded-opentype'),
    url('/fonts/johnston100-w03-light.woff2') format('woff2'),
    url('/fonts/johnston100-w03-light.woff') format('woff'),
    url('/fonts/johnston100-w03-light.ttf') format('truetype'),
    url('/fonts/johnston100-w03-light.svg#Johnston100-Light') format('svg');
  font-weight: 300;
  font-style: normal;
  font-display: swap;
}

@font-face {
  font-family: 'Johnston100';
  src: url('/fonts/johnston100-w03-medium.eot');
  src:
    url('/fonts/johnston100-w03-medium.eot?#iefix') format('embedded-opentype'),
    url('/fonts/johnston100-w03-medium.woff2') format('woff2'),
    url('/fonts/johnston100-w03-medium.woff') format('woff'),
    url('/fonts/johnston100-w03-medium.ttf') format('truetype'),
    url('/fonts/johnston100-w03-medium.svg#Johnston100-Medium') format('svg');
  font-weight: 400;
  font-style: normal;
  font-display: swap;
}

@font-face {
  font-family: 'Johnston100';
  src: url('/fonts/johnston100-w03-regular.eot');
  src:
    url('/fonts/johnston100-w03-regular.eot?#iefix') format('embedded-opentype'),
    url('/fonts/johnston100-w03-regular.woff2') format('woff2'),
    url('/fonts/johnston100-w03-regular.woff') format('woff'),
    url('/fonts/johnston100-w03-regular.ttf') format('truetype'),
    url('/fonts/johnston100-w03-regular.svg#Johnston100-Regular') format('svg');
  font-weight: 500;
  font-style: normal;
  font-display: swap;
}

@layer base {
  html {
    @apply font-sans;
  }
}

:focus {
  outline: none;
}

:focus-visible {
  outline: 2px solid currentColor;
  outline-offset: 2px;
}

@media (prefers-reduced-motion: reduce) {
  * {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}

:root {
  --focus-color: theme(colors.tfl.ink);
}

*:focus-visible {
  outline: 3px solid var(--focus-color);
  outline-offset: 2px;
  @apply rounded-xs;
}

@layer utilities {
  .sr-only-but-not-for-focus:focus,
  .sr-only {
    position: absolute !important;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border: 0;
  }

  /* Loader animations */
  @keyframes logo-spin {
    0% {
      transform: rotate(0deg);
    }
    100% {
      transform: rotate(360deg);
    }
  }

  @keyframes logo-pulse {
    0%,
    100% {
      transform: scale(1);
    }
    50% {
      transform: scale(1.1);
    }
  }

  @keyframes logo-bounce {
    0%,
    100% {
      transform: translateY(0);
    }
    50% {
      transform: translateY(-8px);
    }
  }

  @keyframes logo-color-shift {
    0% {
      filter: hue-rotate(0deg) saturate(1);
    }
    25% {
      filter: hue-rotate(90deg) saturate(1.2);
    }
    50% {
      filter: hue-rotate(180deg) saturate(1);
    }
    75% {
      filter: hue-rotate(270deg) saturate(1.2);
    }
    100% {
      filter: hue-rotate(360deg) saturate(1);
    }
  }

  @keyframes logo-wiggle {
    0%,
    100% {
      transform: rotate(0deg);
    }
    25% {
      transform: rotate(5deg);
    }
    75% {
      transform: rotate(-5deg);
    }
  }

  .loader-spin {
    animation: logo-spin 2s linear infinite;
  }

  .loader-pulse {
    animation: logo-pulse 1.5s ease-in-out infinite;
  }

  .loader-bounce {
    animation: logo-bounce 1s ease-in-out infinite;
  }

  .loader-color-shift {
    animation: logo-color-shift 3s ease-in-out infinite;
  }

  .loader-wiggle {
    animation: logo-wiggle 0.5s ease-in-out infinite;
  }

  .loader-combo {
    animation:
      logo-spin 2s linear infinite,
      logo-pulse 1.5s ease-in-out infinite,
      logo-bounce 1s ease-in-out infinite;
  }

  .loader-funky {
    animation:
      logo-spin 2s linear infinite,
      logo-pulse 1.5s ease-in-out infinite,
      logo-bounce 1s ease-in-out infinite,
      logo-wiggle 0.5s ease-in-out infinite;
  }
}
